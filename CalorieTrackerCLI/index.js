const fs = require('fs');
const FILE = 'data.json';

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
function addFood(name, calories) {
  const data = loadData();
  data.push({ name, calories, date: new Date().toLocaleDateString() });
  fs.writeFileSync(FILE, JSON.stringify(data, null, 2));
  console.log(`‚úÖ "${name}" (${calories} –∫–∫–∞–ª) –¥–æ–±–∞–≤–ª–µ–Ω–æ!`);
}

// –°—É–º–º–∞ –∫–∞–ª–æ—Ä–∏–π –∑–∞ –¥–µ–Ω—å
function getTotal() {
  const today = new Date().toLocaleDateString();
  const total = loadData()
    .filter(entry => entry.date === today)
    .reduce((sum, item) => sum + item.calories, 0);
  console.log(`üìä –°–µ–≥–æ–¥–Ω—è: ${total} –∫–∫–∞–ª`);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
function loadData() {
  try {
    return JSON.parse(fs.readFileSync(FILE));
  } catch {
    return [];
  }
}

// –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const [command, arg1, arg2] = process.argv.slice(2);
switch (command) {
  case 'add':
    addFood(arg1, parseInt(arg2));
    break;
  case 'total':
    getTotal();
    break;
  default:
    console.log('‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: add <–ø—Ä–æ–¥—É–∫—Ç> <–∫–∞–ª–æ—Ä–∏–∏> –∏–ª–∏ total');
}